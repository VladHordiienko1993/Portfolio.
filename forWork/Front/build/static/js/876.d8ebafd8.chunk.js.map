{"version":3,"file":"static/js/876.d8ebafd8.chunk.js","mappings":"kMAEA,MAAMA,EAAcC,EAAAA,KAAaC,QAAQ,sBAAsB,qBAAqBC,WAE9EC,EAAeH,EAAAA,KAAaI,MAAM,8BAA8BH,QAAQ,2CAA2CC,WAEnHG,EAAkBL,EAAAA,KAAaC,QAAQ,kCAAkC,2DAA2DC,WAG7HI,EAAiBN,EAAAA,GAAW,CACvCO,KAAMR,EACNK,MAAOD,EACPK,SAAUH,I,aCXZ,QAA4B,8BAA5B,EAAiE,yBAAjE,EAAkG,0BAAlG,EAAuI,6BAAvI,EAAgL,8BAAhL,EAA6N,iCAA7N,EAA8Q,kC,aCU5Q,MA+EF,EA/EqBI,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,MACPC,GAAQC,EAAAA,EAAAA,KAAaC,GAAQA,EAAMC,MAAMH,QAmB/C,OACEI,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLC,oBAAkB,EAClBC,SApBWC,MAAMC,EAAQC,KAC7B,MAAOC,MAAOA,KAAMC,UAAgBC,EAAAA,GAAoBJ,GACtDK,OAAOC,IACHA,GAAOA,EAAIC,SACVvB,GAASwB,EAAAA,EAAAA,IAAgBF,EAAIG,SAASP,KAAKd,MAAM,GAAGmB,SACxD,IAECJ,IACDnB,GAAS0B,EAAAA,EAAAA,IAAkBP,IAE3BF,EAAUU,YACVzB,EAAK,KACP,EASG0B,cAAeC,EAAAA,EAAUC,4BACzBC,iBAAkBnC,EAAee,SAE/BqB,IAEEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACzB,UAAWC,EAAYC,SAAA,EAC3BsB,EAAAA,EAAAA,MAAA,SAAOxB,UAAWC,EAAaC,SAAA,EAC7BH,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACJtC,KAAK,OACLuC,YAAY,OACZ3B,UAAWC,KAEbF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAY,CACX5B,UAAWC,EACXb,KAAK,OACLyC,UAAU,WAIdL,EAAAA,EAAAA,MAAA,SAAOxB,UAAWC,EAAaC,SAAA,EAC7BH,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACNI,KAAK,QACH1C,KAAK,QACLuC,YAAY,QACZ3B,UAAWC,KAEbF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAY,CAACxC,KAAK,QAAQyC,UAAU,WAEvCL,EAAAA,EAAAA,MAAA,SAAOxB,UAAWC,EAAaC,SAAA,EAC7BH,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACJtC,KAAK,WACL0C,KAAK,WACLH,YAAY,WACZ3B,UAAWC,KAEbF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAY,CAACxC,KAAK,WAAWyC,UAAU,WAE1C9B,EAAAA,EAAAA,KAAC2B,EAAAA,GAAK,CACJtC,KAAK,SACL0C,KAAK,SACLC,MAAM,WACN/B,UAAWC,IAEZN,GAAQI,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAqBC,SAAC,wCACjB,WAKjC,ECzEV,EAV4B8B,KAC1B,MAAM,gBAACC,IAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC/B,cAACC,GAAiBH,IACxB,OACElC,EAAAA,EAAAA,KAAA,OAAKC,UAAWoC,IAAgBlC,UAC5BH,EAAAA,EAAAA,KAACT,EAAU,KACT,C,gCCVV,MAWA,EAXkB,CAChB+B,4BAA8B,CAC5BjC,KAAO,GACPH,MAAO,GACPI,SAAU,IAEZgD,4BAA8B,CAC5BpD,MAAO,GACPI,SAAU,I","sources":["utils/schemas/index.js","webpack://front/./src/components/SignUpForm/SignUpForm.module.scss?b627","components/SignUpForm/index.js","pages/SignUpWithEmailPage.js","utils/constants/constants.js"],"sourcesContent":["import * as Yup from 'yup';\n\nconst SCHEMA_NAME = Yup.string().matches(/[a-zA-Z0-9].{1,64}$/,'2 letters minimum').required();\n\nconst SCHEMA_EMAIL = Yup.string().email('Please enter a valid email').matches(/[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/).required();\n\nconst SCHEMA_PASSWORD = Yup.string().matches(/^(?=.*?[A-Z])(?=.*?[a-z]).{5,}$/,'1 uppercase letter/1 lowercase letter/5 letters minimum').required();\n\n\nexport const SCHEMA_SIGN_UP = Yup.object({\n  name: SCHEMA_NAME,\n  email: SCHEMA_EMAIL,\n  password: SCHEMA_PASSWORD,\n});\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SignUpForm_container__v6hc7\",\"form\":\"SignUpForm_form__G6Fvw\",\"label\":\"SignUpForm_label__pvK+7\",\"inputBox\":\"SignUpForm_inputBox__+5k8u\",\"btnSubmit\":\"SignUpForm_btnSubmit__oMSv2\",\"errorMessage\":\"SignUpForm_errorMessage__J2c9t\",\"notValidEmail\":\"SignUpForm_notValidEmail__5LXGC\"};","import React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { createUserError,createUserSuccess } from \"../../slices/userSlices\";\nimport CONSTANTS from \"../../utils/constants/constants\";\nimport { SCHEMA_SIGN_UP } from \"../../utils/schemas\";\nimport * as API from \"../../api/index\";\nimport styles from \"./SignUpForm.module.scss\";\n\n\n  const SignUpForm = () => {\n  const dispatch = useDispatch();\n  const push = useNavigate();\n  const error = useSelector((state)=>state.users.error);\n \n\n  const onSubmit = async(values, formikBag) => {\n    const {data: {data: user}}  = await API.fetchCreateUser(values)\n     .catch((err)=>{\n       if(err && err.message){\n           dispatch(createUserError(err.response.data.error[0].message))\n       }\n     })\n     if(user ){\n       dispatch(createUserSuccess(user))\n  \n       formikBag.resetForm()\n       push('/')\n     }\n   };\n\n\n  return (\n    <div className={styles.container}>\n      <Formik\n        enableReinitialize\n        onSubmit={onSubmit}\n        initialValues={CONSTANTS.INITIAL_VALUES_FORM_SIGN_UP}\n        validationSchema={SCHEMA_SIGN_UP}\n      >\n        {(formikProps) => {\n          return (\n            <Form className={styles.form}>\n              <label className={styles.label}>\n                <Field\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  className={styles.inputBox}\n                />\n                <ErrorMessage\n                  className={styles.errorMessage}\n                  name=\"name\"\n                  component=\"em\"\n                />\n              </label>\n\n              <label className={styles.label}>\n                <Field\n                type='email'\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  className={styles.inputBox}\n                />\n                <ErrorMessage name=\"email\" component=\"em\"   />\n              </label>\n              <label className={styles.label}>\n                <Field\n                  name=\"password\"\n                  type='password'\n                  placeholder=\"Password\"\n                  className={styles.inputBox}\n                />\n                <ErrorMessage name=\"password\" component=\"em\" />\n              </label>\n              <Field\n                name=\"submit\"\n                type=\"submit\"\n                value=\"Join now\"\n                className={styles.btnSubmit}\n              />\n              {error ? <em className={styles.notValidEmail}>\nUser with this email already exists</em> : null}\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\nexport default SignUpForm;\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../context/index';\nimport SignUpForm from '../components/SignUpForm';\n\nconst SignUpWithEmailPage = () => {\n  const {useSetClassName} = useContext(ThemeContext);\n  const {classNamePage} = useSetClassName();\n  return (\n    <div className={classNamePage()}>\n        <SignUpForm/>\n    </div>\n  );\n}\n\nexport default SignUpWithEmailPage;\n","const CONSTANTS = {\n  INITIAL_VALUES_FORM_SIGN_UP : {\n    name : '',\n    email: '',\n    password: ''\n  },\n  INITIAL_VALUES_FORM_SIGN_IN : {\n    email: '',\n    password: ''\n  }\n}\nexport default CONSTANTS;"],"names":["SCHEMA_NAME","Yup","matches","required","SCHEMA_EMAIL","email","SCHEMA_PASSWORD","SCHEMA_SIGN_UP","name","password","SignUpForm","dispatch","useDispatch","push","useNavigate","error","useSelector","state","users","_jsx","className","styles","children","Formik","enableReinitialize","onSubmit","async","values","formikBag","data","user","API","catch","err","message","createUserError","response","createUserSuccess","resetForm","initialValues","CONSTANTS","INITIAL_VALUES_FORM_SIGN_UP","validationSchema","formikProps","_jsxs","Form","Field","placeholder","ErrorMessage","component","type","value","SignUpWithEmailPage","useSetClassName","useContext","ThemeContext","classNamePage","INITIAL_VALUES_FORM_SIGN_IN"],"sourceRoot":""}