{"version":3,"file":"static/js/719.78c6c7ae.chunk.js","mappings":"kMACA,QAA4B,6BAA5B,EAAgE,wBAAhE,EAAgG,yBAAhG,EAAoI,4BAApI,EAA4K,6BAA5K,EAAwQ,iCAAxQ,EAA4T,oCAA5T,EAAwX,yCAAxX,EAA+a,+B,aCQ/a,MAgFA,EAhFkBA,KAChB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAaC,GAAQA,EAAMC,MAAMH,QACzCI,GAAOC,EAAAA,EAAAA,MAoBb,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAGrCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAA6BC,UAACH,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAmBC,SAAA,EACpEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBAAkBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qCACxBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mCAQTC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,oBAAkB,EAClBC,SAhCWC,MAAMC,EAAQC,KAC7B,MAAOC,MAAMA,KAAMC,UAAeC,EAAAA,GAAmBJ,GAC9CK,OAAOC,IACHA,GAAOA,EAAIC,SACZxB,GAASyB,EAAAA,EAAAA,IAAgBF,EAAIG,QAAQC,QACvC,IAGCP,IACDpB,GAAS4B,EAAAA,EAAAA,IAAkBR,IAE3BF,EAAUW,YACVvB,EAAK,KACP,EAoBFwB,cAAeC,EAAAA,EAAUC,4BAA4BrB,SAEnDsB,IAEEzB,EAAAA,EAAAA,MAAC0B,EAAAA,GAAI,CAACzB,UAAWC,EAAYC,SAAA,EAE3BH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAaC,SAAA,EAC7BC,EAAAA,EAAAA,KAACuB,EAAAA,GAAK,CACNC,KAAK,QACHC,KAAK,QACLC,YAAY,QACZ7B,UAAWC,KAEbE,EAAAA,EAAAA,KAAC2B,EAAAA,GAAY,CAACF,KAAK,QAAQG,UAAU,WAEvC5B,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAaC,UAC7BC,EAAAA,EAAAA,KAACuB,EAAAA,GAAK,CACJE,KAAK,WACLD,KAAK,WACLE,YAAY,WACZ7B,UAAWC,OAGfE,EAAAA,EAAAA,KAACuB,EAAAA,GAAK,CACJE,KAAK,SACLD,KAAK,SACLK,MAAM,WACNhC,UAAWC,IAED,MAAVR,GAAgBU,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAqBC,SAAC,+BACpB,KACvB,MAAVT,GAAgBU,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAwBC,SAAC,0BAC5B,YAKlC,ECtEV,EAVkB+B,KAChB,MAAM,gBAACC,IAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC/B,cAACC,GAAiBH,IACxB,OACG/B,EAAAA,EAAAA,KAAA,OAAKH,UAAWqC,IAAgBnC,UAChCC,EAAAA,EAAAA,KAACb,EAAS,KACN,C,gCCZT,MAWA,EAXkB,CAChBgD,4BAA8B,CAC5BV,KAAO,GACPW,MAAO,GACPC,SAAU,IAEZjB,4BAA8B,CAC5BgB,MAAO,GACPC,SAAU,I","sources":["webpack://front/./src/components/LogInForm/LogInForm.module.scss?9405","components/LogInForm/LogInForm.js","pages/LogInPage.js","utils/constants/constants.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LogInForm_container__bxTMz\",\"form\":\"LogInForm_form__5S3GH\",\"label\":\"LogInForm_label__A7Z0w\",\"inputBox\":\"LogInForm_inputBox__1GBMK\",\"btnSubmit\":\"LogInForm_btnSubmit__S4b27\",\"errorMessage\":\"LogInForm_errorMessage__QvK0O\",\"notValidEmail\":\"LogInForm_notValidEmail__cOtX4\",\"notValidPassword\":\"LogInForm_notValidPassword__4khFE\",\"containerforTextLogin\":\"LogInForm_containerforTextLogin__aOlRk\",\"textOfLogin\":\"LogInForm_textOfLogin__yMLdN\"};","import React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport { createUserSuccess,createUserError } from \"../../slices/userSlices\";\r\nimport CONSTANTS from \"../../utils/constants/constants\";\r\nimport * as API from \"../../api/index\";\r\nimport styles from \"./LogInForm.module.scss\";\r\n\r\nconst LogInForm = () => {\r\n  const dispatch = useDispatch();\r\n  const error = useSelector((state)=>state.users.error);\r\n  const push = useNavigate();\r\n \r\n\r\n  \r\n  const onSubmit = async(values, formikBag) => {\r\n    const {data:{data: user}} = await API.fetchLoginUser(values)\r\n          .catch((err)=>{\r\n            if(err && err.message){\r\n              dispatch(createUserError(err.request.status))\r\n            }\r\n          })\r\n\r\n          if(user){\r\n            dispatch(createUserSuccess(user))\r\n\r\n            formikBag.resetForm()\r\n            push('/')\r\n          }\r\n  };\r\n \r\n  return (\r\n    <div className={styles.container}>\r\n\r\n\r\n<div className={styles.containerforTextLogin}><h2 className={styles.textOfLogin}>\r\n            <p>User for login</p><p>email: 2testuserusemy@gmail.com</p>\r\n            <p>password: testUserUseMe2</p> \r\n             </h2>\r\n             </div>\r\n\r\n\r\n\r\n\r\n\r\n      <Formik\r\n        enableReinitialize\r\n        onSubmit={onSubmit}\r\n        initialValues={CONSTANTS.INITIAL_VALUES_FORM_SIGN_IN}\r\n      >\r\n        {(formikProps) => {\r\n          return (\r\n            <Form className={styles.form}>\r\n\r\n              <label className={styles.label}>\r\n                <Field\r\n                type='email'\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  className={styles.inputBox}\r\n                />\r\n                <ErrorMessage name=\"email\" component=\"em\" />\r\n              </label>\r\n              <label className={styles.label}>\r\n                <Field\r\n                  name=\"password\"\r\n                  type='password'\r\n                  placeholder=\"Password\"\r\n                  className={styles.inputBox}\r\n                />\r\n              </label>\r\n              <Field\r\n                name=\"submit\"\r\n                type=\"submit\"\r\n                value=\"Join now\"\r\n                className={styles.btnSubmit}\r\n              />\r\n               {error === 400 ? <em className={styles.notValidEmail}>\r\n               Please enter a valid email</em> : null}\r\n               {error === 404 ? <em className={styles.notValidPassword}>\r\n               Password is not valid</em> : null}\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\nexport default LogInForm;\r\n","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../context/index';\r\nimport LogInForm from '../components/LogInForm/LogInForm';\r\n\r\n\r\n\r\nconst LogInPage = () => {\r\n  const {useSetClassName} = useContext(ThemeContext);\r\n  const {classNamePage} = useSetClassName();\r\n  return (\r\n     <div className={classNamePage()}>\r\n     <LogInForm/>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default LogInPage;\r\n","const CONSTANTS = {\n  INITIAL_VALUES_FORM_SIGN_UP : {\n    name : '',\n    email: '',\n    password: ''\n  },\n  INITIAL_VALUES_FORM_SIGN_IN : {\n    email: '',\n    password: ''\n  }\n}\nexport default CONSTANTS;"],"names":["LogInForm","dispatch","useDispatch","error","useSelector","state","users","push","useNavigate","_jsxs","className","styles","children","_jsx","Formik","enableReinitialize","onSubmit","async","values","formikBag","data","user","API","catch","err","message","createUserError","request","status","createUserSuccess","resetForm","initialValues","CONSTANTS","INITIAL_VALUES_FORM_SIGN_IN","formikProps","Form","Field","type","name","placeholder","ErrorMessage","component","value","LogInPage","useSetClassName","useContext","ThemeContext","classNamePage","INITIAL_VALUES_FORM_SIGN_UP","email","password"],"sourceRoot":""}