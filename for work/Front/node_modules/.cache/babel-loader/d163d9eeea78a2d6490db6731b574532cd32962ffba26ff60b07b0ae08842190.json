{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { composeWithDevTools } from '@reduxjs/toolkit/dist/devtoolsExtension';\nimport createSagaMiddleWare from 'redux-saga';\nimport todoReducer from '..slices/todoReducer';\nimport userReducer from '..slices/userReducer';\nimport rootSaga from '../sagas';\nconst sagaMiddleWare = createSagaMiddleWare();\nconst store = configureStore({\n  devTools: true,\n  reducer: {\n    todos: todoReducer,\n    users: userReducer\n  },\n  middleware: [sagaMiddleWare]\n});\ncomposeWithDevTools(sagaMiddleWare.run(rootSaga));\nexport default store;","map":{"version":3,"names":["configureStore","composeWithDevTools","createSagaMiddleWare","todoReducer","userReducer","rootSaga","sagaMiddleWare","store","devTools","reducer","todos","users","middleware","run"],"sources":["C:/Users/Admin/Desktop/Presentation/for work/Front/src/store/index.js"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit';\r\nimport { composeWithDevTools } from '@reduxjs/toolkit/dist/devtoolsExtension';\r\nimport createSagaMiddleWare from 'redux-saga';\r\nimport todoReducer from '..slices/todoReducer';\r\nimport userReducer from '..slices/userReducer';\r\nimport rootSaga from '../sagas';\r\n\r\n\r\nconst sagaMiddleWare = createSagaMiddleWare();\r\n\r\nconst store  = configureStore({\r\n  devTools: true,\r\n  reducer: {\r\n    todos: todoReducer,\r\n    users: userReducer\r\n  },\r\n  middleware: [sagaMiddleWare],\r\n});\r\n\r\ncomposeWithDevTools(sagaMiddleWare.run(rootSaga));\r\n\r\nexport default store;\r\n\r\n"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,SAASC,mBAAmB,QAAQ,yCAAyC;AAC7E,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,QAAQ,MAAM,UAAU;AAG/B,MAAMC,cAAc,GAAGJ,oBAAoB,CAAC,CAAC;AAE7C,MAAMK,KAAK,GAAIP,cAAc,CAAC;EAC5BQ,QAAQ,EAAE,IAAI;EACdC,OAAO,EAAE;IACPC,KAAK,EAAEP,WAAW;IAClBQ,KAAK,EAAEP;EACT,CAAC;EACDQ,UAAU,EAAE,CAACN,cAAc;AAC7B,CAAC,CAAC;AAEFL,mBAAmB,CAACK,cAAc,CAACO,GAAG,CAACR,QAAQ,CAAC,CAAC;AAEjD,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}