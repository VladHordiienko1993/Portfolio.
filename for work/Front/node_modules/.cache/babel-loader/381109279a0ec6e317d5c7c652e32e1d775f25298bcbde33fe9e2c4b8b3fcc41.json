{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n// import todoReducer from \"../slices/todoSlice\";\nimport userReducer from \"../slices/userSlices\";\nimport rootSaga from \"../sagas\";\nconst SagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  devTools: true,\n  reducer: {\n    // todo: todoReducer,\n    user: userReducer\n  },\n  middleware: [SagaMiddleware]\n});\ncomposeWithDevTools(SagaMiddleware.run(rootSaga));\nexport default store;","map":{"version":3,"names":["configureStore","createSagaMiddleware","composeWithDevTools","userReducer","rootSaga","SagaMiddleware","store","devTools","reducer","user","middleware","run"],"sources":["C:/Users/Admin/Desktop/Todo/todo_front/src/store/index.js"],"sourcesContent":["import {configureStore} from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import todoReducer from \"../slices/todoSlice\";\r\nimport userReducer from \"../slices/userSlices\";\r\nimport rootSaga from \"../sagas\";\r\n\r\n\r\n\r\nconst SagaMiddleware = createSagaMiddleware();\r\n\r\n\r\nconst store = configureStore({\r\n  devTools: true,\r\n  reducer: {\r\n    // todo: todoReducer,\r\n    user: userReducer\r\n  },\r\n  middleware: [SagaMiddleware],\r\n \r\n});\r\ncomposeWithDevTools(SagaMiddleware.run(rootSaga));\r\n\r\nexport default store;"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D;AACA,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,QAAQ,MAAM,UAAU;AAI/B,MAAMC,cAAc,GAAGJ,oBAAoB,CAAC,CAAC;AAG7C,MAAMK,KAAK,GAAGN,cAAc,CAAC;EAC3BO,QAAQ,EAAE,IAAI;EACdC,OAAO,EAAE;IACP;IACAC,IAAI,EAAEN;EACR,CAAC;EACDO,UAAU,EAAE,CAACL,cAAc;AAE7B,CAAC,CAAC;AACFH,mBAAmB,CAACG,cAAc,CAACM,GAAG,CAACP,QAAQ,CAAC,CAAC;AAEjD,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}