{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleWare from 'redux-saga';\nimport todoReducer from '..slices/todoReducer';\nimport userReducer from '..slices/userReducer';\nimport rootSaga from '../sagas';\nconst sagaMiddleware = createSagaMiddleWare();\nconst store = configureStore({\n  devTools: true,\n  reducer: {\n    todos: todoReducer,\n    users: userReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    thunk: false\n  }).concat(sagaMiddleware)\n});\nsagaMiddleWare.run(rootSaga);\nexport default store;","map":{"version":3,"names":["configureStore","createSagaMiddleWare","todoReducer","userReducer","rootSaga","sagaMiddleware","store","devTools","reducer","todos","users","middleware","getDefaultMiddleware","thunk","concat","sagaMiddleWare","run"],"sources":["C:/Users/Admin/Desktop/Presentation/for work/Front/src/store/index.js"],"sourcesContent":["import {configureStore} from '@reduxjs/toolkit';\r\nimport createSagaMiddleWare from 'redux-saga';\r\nimport todoReducer from '..slices/todoReducer';\r\nimport userReducer from '..slices/userReducer';\r\nimport rootSaga from '../sagas';\r\n\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleWare();\r\n\r\nconst store  = configureStore({\r\n  devTools: true,\r\n  reducer: {\r\n    todos: todoReducer,\r\n    users: userReducer\r\n  },\r\n  middleware: (getDefaultMiddleware)=>getDefaultMiddleware({thunk:false}).concat(sagaMiddleware),\r\n});\r\n\r\n(sagaMiddleWare.run(rootSaga));\r\n\r\nexport default store;\r\n\r\n"],"mappings":"AAAA,SAAQA,cAAc,QAAO,kBAAkB;AAC/C,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,QAAQ,MAAM,UAAU;AAI/B,MAAMC,cAAc,GAAGJ,oBAAoB,CAAC,CAAC;AAE7C,MAAMK,KAAK,GAAIN,cAAc,CAAC;EAC5BO,QAAQ,EAAE,IAAI;EACdC,OAAO,EAAE;IACPC,KAAK,EAAEP,WAAW;IAClBQ,KAAK,EAAEP;EACT,CAAC;EACDQ,UAAU,EAAGC,oBAAoB,IAAGA,oBAAoB,CAAC;IAACC,KAAK,EAAC;EAAK,CAAC,CAAC,CAACC,MAAM,CAACT,cAAc;AAC/F,CAAC,CAAC;AAEDU,cAAc,CAACC,GAAG,CAACZ,QAAQ,CAAC;AAE7B,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}