{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  users: {\n    id: '',\n    token: '',\n    email: '',\n    name: ''\n  },\n  url: '',\n  isFetching: false,\n  error: null\n};\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    createUserRequest: (state, action) => {\n      state.isFetching = true;\n      state.error = null;\n    },\n    createUserSuccess: (state, action) => {\n      state.users.push(action.payload);\n      state.isFetching = false;\n      state.error = null;\n    },\n    createUserError: (state, action) => {\n      state.isFetching = false;\n      state.error = action.payload;\n    },\n    requestToGoogle: (state, action) => {},\n    callBackGoogle1: (state, action) => {},\n    callBackGoogle2: (state, action) => {\n      state.url = action.payload;\n    }\n  }\n});\nexport const {\n  createUserRequest,\n  createUserSuccess,\n  createUserError,\n  requestToGoogle,\n  callBackGoogle1,\n  callBackGoogle2\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","users","id","token","email","name","url","isFetching","error","userSlice","reducers","createUserRequest","state","action","createUserSuccess","push","payload","createUserError","requestToGoogle","callBackGoogle1","callBackGoogle2","actions","reducer"],"sources":["C:/Users/Admin/Desktop/Presentation/for work/Front/src/slices/userSlices.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  users: {\r\n    id: '',\r\n    token: '',\r\n    email: '',\r\n    name: '',\r\n  },\r\n  url: '',\r\n  isFetching: false,\r\n  error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    createUserRequest: (state,action)=>{\r\n      state.isFetching = true;\r\n      state.error = null;\r\n    },\r\n    createUserSuccess: (state,action)=>{\r\n      state.users.push(action.payload)\r\n      state.isFetching = false;\r\n      state.error = null;   \r\n    },\r\n    createUserError: (state,action)=>{\r\n      state.isFetching = false;\r\n      state.error = action.payload;\r\n    },\r\n    requestToGoogle: (state,action)=>{},\r\n    callBackGoogle1: (state,action)=>{},\r\n    callBackGoogle2: (state,action)=>{\r\n      state.url = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const {createUserRequest,createUserSuccess,createUserError,requestToGoogle,callBackGoogle1,callBackGoogle2} = userSlice.actions;\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;IACLC,EAAE,EAAE,EAAE;IACNC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACR,CAAC;EACDC,GAAG,EAAE,EAAE;EACPC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BM,IAAI,EAAE,OAAO;EACbL,YAAY;EACZU,QAAQ,EAAE;IACRC,iBAAiB,EAAEA,CAACC,KAAK,EAACC,MAAM,KAAG;MACjCD,KAAK,CAACL,UAAU,GAAG,IAAI;MACvBK,KAAK,CAACJ,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,iBAAiB,EAAEA,CAACF,KAAK,EAACC,MAAM,KAAG;MACjCD,KAAK,CAACX,KAAK,CAACc,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC;MAChCJ,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACJ,KAAK,GAAG,IAAI;IACpB,CAAC;IACDS,eAAe,EAAEA,CAACL,KAAK,EAACC,MAAM,KAAG;MAC/BD,KAAK,CAACL,UAAU,GAAG,KAAK;MACxBK,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACG,OAAO;IAC9B,CAAC;IACDE,eAAe,EAAEA,CAACN,KAAK,EAACC,MAAM,KAAG,CAAC,CAAC;IACnCM,eAAe,EAAEA,CAACP,KAAK,EAACC,MAAM,KAAG,CAAC,CAAC;IACnCO,eAAe,EAAEA,CAACR,KAAK,EAACC,MAAM,KAAG;MAC/BD,KAAK,CAACN,GAAG,GAAGO,MAAM,CAACG,OAAO;IAC5B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAACL,iBAAiB;EAACG,iBAAiB;EAACG,eAAe;EAACC,eAAe;EAACC,eAAe;EAACC;AAAe,CAAC,GAAGX,SAAS,CAACY,OAAO;AACtI,eAAeZ,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}