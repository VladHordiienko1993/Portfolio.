{"ast":null,"code":"import * as Yup from 'yup';\nconst SCHEMA_NAME = Yup.string().matches(/[a-zA-Z0-9].{1,64}$/, '2 letters minimum').required();\nconst SCHEMA_EMAIL = Yup.string().email('Please enter a valid email').matches(/[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/);\nconst SCHEMA_PASSWORD = Yup.string().matches(/^(?=.*?[A-Z])(?=.*?[a-z]).{5,}$/, '1 uppercase letter/1 lowercase letter/5 letters minimum');\nexport const SCHEMA_SIGN_UP = Yup.object({\n  name: SCHEMA_NAME,\n  email: SCHEMA_EMAIL,\n  password: SCHEMA_PASSWORD\n});","map":{"version":3,"names":["Yup","SCHEMA_NAME","string","matches","required","SCHEMA_EMAIL","email","SCHEMA_PASSWORD","SCHEMA_SIGN_UP","object","name","password"],"sources":["C:/Users/Admin/Desktop/Presentation/for work/Front/src/utils/schemas/index.js"],"sourcesContent":["import * as Yup from 'yup';\r\n\r\nconst SCHEMA_NAME = Yup.string().matches(/[a-zA-Z0-9].{1,64}$/,'2 letters minimum').required();\r\nconst SCHEMA_EMAIL = Yup.string().email('Please enter a valid email').matches(/[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/);\r\nconst SCHEMA_PASSWORD = Yup.string().matches(/^(?=.*?[A-Z])(?=.*?[a-z]).{5,}$/,'1 uppercase letter/1 lowercase letter/5 letters minimum');\r\n\r\n\r\nexport const SCHEMA_SIGN_UP = Yup.object({\r\n  name: SCHEMA_NAME,\r\n  email: SCHEMA_EMAIL,\r\n  password: SCHEMA_PASSWORD,\r\n});\r\n\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,MAAMC,WAAW,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,OAAO,CAAC,qBAAqB,EAAC,mBAAmB,CAAC,CAACC,QAAQ,CAAC,CAAC;AAC9F,MAAMC,YAAY,GAAGL,GAAG,CAACE,MAAM,CAAC,CAAC,CAACI,KAAK,CAAC,4BAA4B,CAAC,CAACH,OAAO,CAAC,yCAAyC,CAAC;AACxH,MAAMI,eAAe,GAAGP,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,OAAO,CAAC,iCAAiC,EAAC,yDAAyD,CAAC;AAGzI,OAAO,MAAMK,cAAc,GAAGR,GAAG,CAACS,MAAM,CAAC;EACvCC,IAAI,EAAET,WAAW;EACjBK,KAAK,EAAED,YAAY;EACnBM,QAAQ,EAAEJ;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}